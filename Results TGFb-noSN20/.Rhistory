geom_text_repel(size = 3, max.overlaps = 10) +
theme_minimal() +
labs(x = "PC1", y = "PC2", title = "PCA: PC1 vs PC2")
# Plot PC2 vs PC3 using ggplot2
ggplot(pca_data_vsd, aes(x = PC1, y = PC3, color = Treatment, label = name)) +
geom_point(size = 3) +
geom_text_repel(size = 3, max.overlaps = 10) +
theme_minimal() +
labs(x = "PC1", y = "PC3", title = "PCA: PC1 vs PC3")
# Plot PC2 vs PC3 using ggplot2
ggplot(pca_data_vsd, aes(x = PC2, y = PC3, color = Treatment, label = name)) +
geom_point(size = 3) +
geom_text_repel(size = 3, max.overlaps = 10) +
theme_minimal() +
labs(x = "PC2", y = "PC3", title = "PCA: PC2 vs PC3")
sub_results <- results(ddsoverall, contrast = c("Treatment","CTR", "IL4IL13"),
alpha = 0.5)
#head(sub_results)
sub_results_LFC <- results(ddsoverall,
name = "Treatment_IL4IL13_vs_CTR",
alpha = 0.5)
sub_res_df <- data.frame(sub_results_LFC)
sub_res_sig <- subset(sub_res_df, padj < 0.05) %>%
arrange(padj)
#Save results table
write.csv(sub_res_sig, file = "./Results IL4_IL13/LogFoldChanges-sig_IL4IL13.csv", row.names = TRUE)
#Save results table
write.csv(sub_res_sig, file = "./Results IL4_IL13-noSN20/LogFoldChanges-sig_IL4IL13.csv", row.names = TRUE)
#Save results table
write.csv(sub_res_df, file = "./Results IL4_IL13-noSN20/LogFoldChanges_full_IL4IL13.csv", row.names = TRUE)
library(fgsea)
library(data.table)
library(ggplot2)
#library(ggplot)
library(tidyverse)
library(readr)
library(tibble)
library(dplyr)
library(digest)
library(enrichplot)
library(openxlsx)
#packageVersion("fGSEA")
# load the metadata and rowcount.csv file
setwd("G:/My Drive/RNAseq/Carli_SN+Cytokines/Analysis Carli/Results IL4_IL13-noSN20/")
# load the metadata and rowcount.csv file
setwd("G:/Mijn Drive/RNAseq/Carli_SN+Cytokines/Analysis Carli/Results IL4_IL13-noSN20/")
metadata <- read.csv("Metadata_filtered_IL4IL13-noSN20.csv", row.names=1)
counts <- read.csv("Rawcounts_filtered_IL4IL13-noSN20.csv", row.names=1)
# check if order of samples is the same in metadata and count table
rownames(metadata)
colnames(counts)
all(rownames(metadata) == colnames(counts))
sig_DEGs <- read.csv("LogFoldChanges_full_IL4IL13-noSN20.csv", sep = ",", row.names = 1)
sig_DEGs <- rownames_to_column(sig_DEGs, "Symbol")
stat <- sig_DEGs %>% select(1, stat)
ranks <- deframe(stat)
ranks <- sort(ranks, decreasing = TRUE)
head(ranks, 20)
H_pathways <- gmtPathways("G:/Mijn Drive/RNAseq/Carli_SN+Cytokines/Analysis Carli/GSEA/h.all.v2023.1.Hs.symbols.gmt")
c2CP_pathways <- gmtPathways("G:/Mijn Drive/RNAseq/Carli_SN+Cytokines/Analysis Carli/GSEA/c2.cp.v2023.1.Hs.symbols.gmt")
c5BP_pathways <- gmtPathways("G:/Mijn Drive/RNAseq/Carli_SN+Cytokines/Analysis Carli/GSEA/c5.go.bp.v2023.1.Hs.symbols.gmt")
c7IM_pathways <- gmtPathways("G:/Mijn Drive/RNAseq/Carli_SN+Cytokines/Analysis Carli/GSEA/c7.all.v2023.2.Hs.symbols.gmt")
#Run the GSEA
fgsea_H <- fgsea(pathways = H_pathways,
stats = ranks,
minSize  = 5,
maxSize  = 1000,
nperm = 10000)
#Tidy the table
tidy_fgsea_H <- fgsea_H %>%
as_tibble() %>%
arrange(desc(NES))
tidy_fgsea_H %>%
dplyr::select(-leadingEdge, -ES, -nMoreExtreme) %>%
arrange(padj) %>%
DT::datatable()
#Export table to excel
datatable_data <- as.data.frame(tidy_fgsea_H) # Extract the data from the DT::datatable
wb <- createWorkbook() # Create a new Excel workbook
addWorksheet(wb, "DataTable") # Add a worksheet to the workbook
writeDataTable(wb, "DataTable", datatable_data) # Write the data from the DT::datatable to the Excel worksheet
saveWorkbook(wb, "H-pathways-IL4IL13_noSN20.xlsx") # Save the workbook to a file
# Plot Enrichment Scores
filtered_fgsea_H <- tidy_fgsea_H %>% filter(padj<0.05)
filtered_fgsea_H$pathway <- sub("HALLMARK_","",filtered_fgsea_H$pathway)
ggplot(filtered_fgsea_H, aes(reorder(pathway, NES), NES)) +
geom_col(fill='dodgerblue') +
coord_flip() +
labs(x="Pathway", y="Normalized Enrichment Score",
title="GSEA of Molecular Hallmarks Pathways in Sensory Neurons exposed to IL4/IL13") +
theme_minimal() +
theme(
plot.title = element_text(size = 16, face = "bold", hjust = 0.5, vjust = 0.5),  # Center the title
axis.text.y = element_text(size = 12)  # Adjust axis text font size
)
fgsea_c2CP <- fgsea(pathways = c2CP_pathways,
stats = ranks,
minSize  = 5,
maxSize  = 1000,
nperm = 10000)
tidy_fgsea_c2CP <- fgsea_c2CP %>%
as_tibble() %>%
arrange(desc(NES))
tidy_fgsea_c2CP %>%
dplyr::select(-leadingEdge, -ES, -nMoreExtreme) %>%
arrange(padj) %>%
DT::datatable()
datatable_data <- as.data.frame(tidy_fgsea_c2CP) # Extract the data from the DT::datatable
wb <- createWorkbook() # Create a new Excel workbook
addWorksheet(wb, "DataTable") # Add a worksheet to the workbook
writeDataTable(wb, "DataTable", datatable_data) # Write the data from the DT::datatable to the Excel worksheet
saveWorkbook(wb, "C2CP-pathways-IL4IL13/noSN20.xlsx") # Save the workbook to a file
saveWorkbook(wb, "C2CP-pathways-IL4IL13?noSN20.xlsx") # Save the workbook to a file
saveWorkbook(wb, "C2CP-pathways-IL4IL13_noSN20.xlsx") # Save the workbook to a file
#plot GSEA
collapsed_c2CP <- collapsePathways(fgsea_c2CP[order(pval)][padj < 0.05],
c2CP_pathways,
ranks)
main_c2CP <- fgsea_c2CP[pathway %in%
collapsed_c2CP$mainPathways][order(-NES), pathway]
main_res_c2CP <- fgsea_c2CP[fgsea_c2CP$pathway %in% main_c2CP]
main_res_c2CP$pathway <- sub("^REACTOME_|^WP_", "",main_res_c2CP$pathway)
num_top_pathways <- 50 # Choose the number of top pathways to display
# Select the top pathways based on NES
top_main_res_c2CP <- main_res_c2CP %>%
top_n(num_top_pathways, wt = NES)
ggplot(top_main_res_c2CP, aes(reorder(pathway, NES), NES)) +
geom_col(fill='dodgerblue') +
coord_flip() +
labs(x="Pathway", y="Normalized Enrichment Score",
title="GSEA of Molecular Canonical Pathways in Sensory Neurons exposed to IL4/IL13") +
theme_minimal() +
theme(
plot.title = element_text(size = 16, face = "bold", hjust = 0.5, vjust = 0.5),  # Center the title
axis.text.y = element_text(size = 12)  # Adjust axis text font size
)
fgsea_c5BP <- fgsea(pathways = c5BP_pathways,
stats = ranks,
minSize  = 5,
maxSize  = 1000,
nperm = 10000)
tidy_fgsea_c5BP <- fgsea_c5BP %>%
as_tibble() %>%
arrange(desc(NES))
tidy_fgsea_c5BP %>%
dplyr::select(-leadingEdge, -ES, -nMoreExtreme) %>%
arrange(padj) %>%
DT::datatable()
datatable_data <- as.data.frame(tidy_fgsea_c5BP) # Extract the data from the DT::datatable
wb <- createWorkbook() # Create a new Excel workbook
addWorksheet(wb, "DataTable") # Add a worksheet to the workbook
writeDataTable(wb, "DataTable", datatable_data) # Write the data from the DT::datatable to the Excel worksheet
saveWorkbook(wb, "C5BP-pathways-IL4IL13-noSN20.xlsx") # Save the workbook to a file
collapsed_c5BP <- collapsePathways(fgsea_c5BP[order(pval)][padj < 0.05],
c5BP_pathways,
ranks)
main_c5BP <- fgsea_c5BP[pathway %in% collapsed_c5BP$mainPathways][order(-NES), pathway]
main_res_c5BP <- fgsea_c5BP[fgsea_c5BP$pathway %in% main_c5BP]
main_res_c5BP$pathway <- sub("GOBP_","",main_res_c5BP$pathway)
num_top_pathways <- 25 # Choose the number of top pathways to display
# Select the top pathways based on NES
top_main_res_c5BP <- main_res_c5BP %>%
top_n(num_top_pathways, wt = NES)
ggplot(top_main_res_c5BP, aes(reorder(pathway, NES), NES)) +
geom_col(fill='dodgerblue') +
coord_flip() +
labs(x="Pathway", y="Normalized Enrichment Score",
title="GSEA of Biological Process Ontology in Sensory Neurons exposed to IL4/IL13") +
theme_minimal()
theme(
plot.title = element_text(size = 16, face = "bold", hjust = 0.5, vjust = 0.5),  # Center the title
axis.text.y = element_text(size = 12)  # Adjust axis text font size
)
num_top_pathways <- 50 # Choose the number of top pathways to display
# Select the top pathways based on NES
top_main_res_c5BP <- main_res_c5BP %>%
top_n(num_top_pathways, wt = NES)
ggplot(top_main_res_c5BP, aes(reorder(pathway, NES), NES)) +
geom_col(fill='dodgerblue') +
coord_flip() +
labs(x="Pathway", y="Normalized Enrichment Score",
title="GSEA of Biological Process Ontology in Sensory Neurons exposed to IL4/IL13") +
theme_minimal()
theme(
plot.title = element_text(size = 16, face = "bold", hjust = 0.5, vjust = 0.5),  # Center the title
axis.text.y = element_text(size = 12)  # Adjust axis text font size
)
num_top_pathways <- 25 # Choose the number of top pathways to display
# Select the top pathways based on NES
top_main_res_c5BP <- main_res_c5BP %>%
top_n(num_top_pathways, wt = NES)
ggplot(top_main_res_c5BP, aes(reorder(pathway, NES), NES)) +
geom_col(fill='dodgerblue') +
coord_flip() +
labs(x="Pathway", y="Normalized Enrichment Score",
title="GSEA of Biological Process Ontology in Sensory Neurons exposed to IL4/IL13") +
theme_minimal()
theme(
plot.title = element_text(size = 16, face = "bold", hjust = 0.5, vjust = 0.5),  # Center the title
axis.text.y = element_text(size = 12)  # Adjust axis text font size
)
ggplot(top_main_res_c5BP, aes(reorder(pathway, NES), NES)) +
geom_col(fill='dodgerblue') +
coord_flip() +
labs(x="Pathway", y="Normalized Enrichment Score",
title="GSEA of Biological Process Ontology in Sensory Neurons exposed to IL4/IL13") +
theme_minimal()
theme(
plot.title = element_text(size = 16, face = "bold", hjust = 0.5, vjust = 0.5),  # Center the title
axis.text.y = element_text(size = 12)  # Adjust axis text font size
)
# Separate the top upregulated and downregulated pathways
top_upregulated <- main_res_c5BP %>%
arrange(-NES) %>%
head(num_top_pathways)
top_downregulated <- main_res_c5BP %>%
arrange(NES) %>%
head(num_top_pathways)
# Combine the top upregulated and downregulated pathways
top_main_res_c5BP <- bind_rows(top_upregulated, top_downregulated)
# Plot
ggplot(top_main_res_c5BP, aes(reorder(pathway, NES), NES)) +
geom_col(fill = 'dodgerblue') +
coord_flip() +
labs(
x = "Pathway",
y = "Normalized Enrichment Score",
title = "GSEA of Biological Process Ontology in Sensory Neurons exposed to IL4/IL13"
) +
theme_minimal() +
theme(
plot.title = element_text(size = 16, face = "bold", hjust = 0.5, vjust = 0.5),
axis.text.y = element_text(size = 12)
)
# load the metadata and rowcount.csv file
setwd("G:/My Drive/RNAseq/Carli_SN+Cytokines/Analysis Carli")
# load the metadata and rowcount.csv file
setwd("G:/Mijn Drive/RNAseq/Carli_SN+Cytokines/Analysis Carli")
metadata <- read.csv("Metadata.csv", row.names=1)
counts <- read.csv("Rawcounts.csv", row.names=1)
# Filter metadata to include only rows with treatment identifier "IL4IL13 or TGF"
metadata <- metadata %>% filter(Treatment %in% c("CTR", "TGF"))
# Filter metadata to include only rows with Experiment identifier SN21-25
metadata <- metadata %>% filter(Experiment %in% c("B", "C", "D", "E", "F"))
# Extract the row names (these will be the column names in rawcounts)
selected_columns <- rownames(metadata)
# Select the corresponding columns from rawcounts
counts <- counts %>% select(all_of(selected_columns))
# check if order of samples is the same in metadata and count table
rownames(metadata)
colnames(counts)
all(rownames(metadata) == colnames(counts))
# remember that DESeq2 will output results for the last term in the formula
ddsoverall <- DESeqDataSetFromMatrix(countData = counts,
colData = metadata,
design = ~ Experiment + Treatment)
ddsoverall$Treatment <- factor(ddsoverall$Treatment, levels = c("CTR", "TGF"))
keep <- rowSums(counts(ddsoverall)) >= 10
ddsoverall <- ddsoverall[keep,]
ddsoverall <- DESeq(ddsoverall)
# Generate data table of epithelial data
resoverall <- results(ddsoverall)
resultsNames(ddsoverall)
normalized_counts <- counts(ddsoverall, normalized = TRUE)
log2_normalized_counts <- log2(normalized_counts + 1)  # Adding 1 to avoid log(0)
vsd_overall <- vst(ddsoverall, blind = TRUE)
vsd_mat <- assay(vsd_overall)
vsd_cor <- cor(vsd_mat)
# Perform PCA
pca <- prcomp(t(vsd_cor), scale. = TRUE)
# Calculate the proportion of variance explained by each component
explained_variance <- pca$sdev^2 / sum(pca$sdev^2)
# Create a data frame to store the results
pca_variance_df <- data.frame(PC = 1:length(explained_variance),
Variance = explained_variance)
# ggplot2 scree plot
ggplot(pca_variance_df, aes(x = PC, y = Variance)) +
geom_line() +
geom_point() +
theme_minimal() +
labs(x = "Principal Components", y = "Proportion of Variance Explained",
title = "Scree Plot") +
scale_x_continuous(breaks = pca_variance_df$PC)
# Extract the assay data from variance-stabilizing transformation (VST)
pca_data_vsd <- plotPCA(vsd_overall, intgroup = "Treatment", returnData = TRUE)
# pca_data_vsd now contains PC1 and PC2 (you can extract PC3 from vsd)
# Perform PCA manually on the VST-transformed data to get PC3
pca_manual <- prcomp(t(assay(vsd_overall)))
# Add PC3 to the PCA data returned by plotPCA
pca_data_vsd$PC3 <- pca_manual$x[, 3]
# Add PC4 to the PCA data returned by plotPCA
pca_data_vsd$PC4 <- pca_manual$x[, 4]
# Add PC5 to the PCA data returned by plotPCA
pca_data_vsd$PC5 <- pca_manual$x[, 5]
# Plot PC2 vs PC3 using ggplot2
ggplot(pca_data_vsd, aes(x = PC2, y = PC3, color = Treatment, label = name)) +
geom_point(size = 3) +
geom_text_repel(size = 3, max.overlaps = 10) +
theme_minimal() +
labs(x = "PC2", y = "PC3", title = "PCA: PC2 vs PC3")
# Plot PC1 vs PC3 using ggplot2 - adapt to plot PC-values of choice
ggplot(pca_data_vsd, aes(x = PC1, y = PC3, color = Treatment, label = name)) +
geom_point(size = 3) +
geom_text_repel(size = 3, max.overlaps = 10) +
theme_minimal() +
labs(x = "PC1", y = "PC3", title = "PCA: PC1 vs PC3")
# Plot PC1 vs PC3 using ggplot2 - adapt to plot PC-values of choice
ggplot(pca_data_vsd, aes(x = PC1, y = PC4, color = Treatment, label = name)) +
geom_point(size = 3) +
geom_text_repel(size = 3, max.overlaps = 10) +
theme_minimal() +
labs(x = "PC1", y = "PC4", title = "PCA: PC1 vs PC4")
sub_results <- results(ddsoverall, contrast = c("Treatment","CTR", "TGF"),
alpha = 0.5)
#head(sub_results)
sub_results_LFC <- results(ddsoverall,
name = "Treatment_TGF_vs_CTR",
alpha = 0.5)
sub_res_df <- data.frame(sub_results_LFC)
sub_res_sig <- subset(sub_res_df, padj < 0.05) %>%
arrange(padj)
#Save results table
write.csv(sub_res_sig, file = "./Results TGFb-noSN20/LogFoldChanges-sig_TGFb-no20.csv", row.names = TRUE)
#Save results table
write.csv(sub_res_df, file = "./Results TGFb-noSN20/LogFoldChanges_full_TGFb-no20.csv", row.names = TRUE)
# load the metadata and rowcount.csv file
setwd("G:/Mijn Drive/RNAseq/Carli_SN+Cytokines/Analysis Carli/Results TGFb/")
metadata <- read.csv("Metadata_filtered_TGFb.csv", row.names=1)
counts <- read.csv("Rawcounts_filtered_TGFb.csv", row.names=1)
# load the metadata and rowcount.csv file
setwd("G:/Mijn Drive/RNAseq/Carli_SN+Cytokines/Analysis Carli/Results TGFb-noSN20/")
metadata <- read.csv("Metadata_filtered_TGFb.csv", row.names=1)
metadata <- read.csv("Metadata_filtered_TGFb-noSN20.csv", row.names=1)
counts <- read.csv("Rawcounts_filtered_TGFb-noSN20.csv", row.names=1)
# check if order of samples is the same in metadata and count table
rownames(metadata)
colnames(counts)
all(rownames(metadata) == colnames(counts))
sig_DEGs <- read.csv("LogFoldChanges_full_TGFb-no20.csv", sep = ",", row.names = 1)
sig_DEGs <- rownames_to_column(sig_DEGs, "Symbol")
stat <- sig_DEGs %>% select(1, stat)
ranks <- deframe(stat)
ranks <- sort(ranks, decreasing = TRUE)
head(ranks, 20)
#Run the GSEA
fgsea_H <- fgsea(pathways = H_pathways,
stats = ranks,
minSize  = 5,
maxSize  = 1000,
nperm = 10000)
#Tidy the table
tidy_fgsea_H <- fgsea_H %>%
as_tibble() %>%
arrange(desc(NES))
tidy_fgsea_H %>%
dplyr::select(-leadingEdge, -ES, -nMoreExtreme) %>%
arrange(padj) %>%
DT::datatable()
#Export table to excel
datatable_data <- as.data.frame(tidy_fgsea_H) # Extract the data from the DT::datatable
wb <- createWorkbook() # Create a new Excel workbook
addWorksheet(wb, "DataTable") # Add a worksheet to the workbook
writeDataTable(wb, "DataTable", datatable_data) # Write the data from the DT::datatable to the Excel worksheet
saveWorkbook(wb, "H-pathways-TGFb-no20.xlsx") # Save the workbook to a file
# Plot Enrichment Scores
filtered_fgsea_H <- tidy_fgsea_H %>% filter(padj<0.05)
filtered_fgsea_H$pathway <- sub("HALLMARK_","",filtered_fgsea_H$pathway)
ggplot(filtered_fgsea_H, aes(reorder(pathway, NES), NES)) +
geom_col(fill='dodgerblue') +
coord_flip() +
labs(x="Pathway", y="Normalized Enrichment Score",
title="GSEA of Molecular Hallmarks Pathways in Sensory Neurons exposed to TGFb") +
theme_minimal() +
theme(
plot.title = element_text(size = 16, face = "bold", hjust = 0.5, vjust = 0.5),  # Center the title
axis.text.y = element_text(size = 12)  # Adjust axis text font size
)
fgsea_c2CP <- fgsea(pathways = c2CP_pathways,
stats = ranks,
minSize  = 5,
maxSize  = 1000,
nperm = 10000)
tidy_fgsea_c2CP <- fgsea_c2CP %>%
as_tibble() %>%
arrange(desc(NES))
tidy_fgsea_c2CP %>%
dplyr::select(-leadingEdge, -ES, -nMoreExtreme) %>%
arrange(padj) %>%
DT::datatable()
datatable_data <- as.data.frame(tidy_fgsea_c2CP) # Extract the data from the DT::datatable
wb <- createWorkbook() # Create a new Excel workbook
addWorksheet(wb, "DataTable") # Add a worksheet to the workbook
writeDataTable(wb, "DataTable", datatable_data) # Write the data from the DT::datatable to the Excel worksheet
saveWorkbook(wb, "C2CP-pathways-TGFb-no20.xlsx") # Save the workbook to a file
#plot GSEA
collapsed_c2CP <- collapsePathways(fgsea_c2CP[order(pval)][padj < 0.05],
c2CP_pathways,
ranks)
main_c2CP <- fgsea_c2CP[pathway %in%
collapsed_c2CP$mainPathways][order(-NES), pathway]
main_res_c2CP <- fgsea_c2CP[fgsea_c2CP$pathway %in% main_c2CP]
main_res_c2CP$pathway <- sub("^REACTOME_|^WP_", "",main_res_c2CP$pathway)
num_top_pathways <- 50 # Choose the number of top pathways to display
# Select the top pathways based on NES
top_main_res_c2CP <- main_res_c2CP %>%
top_n(num_top_pathways, wt = NES)
ggplot(top_main_res_c2CP, aes(reorder(pathway, NES), NES)) +
geom_col(fill='dodgerblue') +
coord_flip() +
labs(x="Pathway", y="Normalized Enrichment Score",
title="GSEA of Molecular Canonical Pathways in Sensory Neurons exposed to TGFb") +
theme_minimal() +
theme(
plot.title = element_text(size = 16, face = "bold", hjust = 0.5, vjust = 0.5),  # Center the title
axis.text.y = element_text(size = 12)  # Adjust axis text font size
)
ggplot(top_main_res_c2CP, aes(reorder(pathway, NES), NES)) +
geom_col(fill='dodgerblue') +
coord_flip() +
labs(x="Pathway", y="Normalized Enrichment Score",
title="GSEA of Molecular Canonical Pathways in Sensory Neurons exposed to TGFb") +
theme_minimal() +
theme(
plot.title = element_text(size = 16, face = "bold", hjust = 0.5, vjust = 0.5),  # Center the title
axis.text.y = element_text(size = 12)  # Adjust axis text font size
)
fgsea_c5BP <- fgsea(pathways = c5BP_pathways,
stats = ranks,
minSize  = 5,
maxSize  = 1000,
nperm = 10000)
tidy_fgsea_c5BP <- fgsea_c5BP %>%
as_tibble() %>%
arrange(desc(NES))
tidy_fgsea_c5BP %>%
dplyr::select(-leadingEdge, -ES, -nMoreExtreme) %>%
arrange(padj) %>%
DT::datatable()
datatable_data <- as.data.frame(tidy_fgsea_c5BP) # Extract the data from the DT::datatable
wb <- createWorkbook() # Create a new Excel workbook
addWorksheet(wb, "DataTable") # Add a worksheet to the workbook
writeDataTable(wb, "DataTable", datatable_data) # Write the data from the DT::datatable to the Excel worksheet
saveWorkbook(wb, "C5BP-pathways-TGFb-no20.xlsx") # Save the workbook to a file
collapsed_c5BP <- collapsePathways(fgsea_c5BP[order(pval)][padj < 0.05],
c5BP_pathways,
ranks)
main_c5BP <- fgsea_c5BP[pathway %in% collapsed_c5BP$mainPathways][order(-NES), pathway]
main_res_c5BP <- fgsea_c5BP[fgsea_c5BP$pathway %in% main_c5BP]
main_res_c5BP$pathway <- sub("GOBP_","",main_res_c5BP$pathway)
num_top_pathways <- 25 # Choose the number of top pathways to display
# Select the top pathways based on NES
top_main_res_c5BP <- main_res_c5BP %>%
top_n(num_top_pathways, wt = NES)
ggplot(top_main_res_c5BP, aes(reorder(pathway, NES), NES)) +
geom_col(fill='dodgerblue') +
coord_flip() +
labs(x="Pathway", y="Normalized Enrichment Score",
title="GSEA of Biological Process Ontology in Sensory Neurons exposed to TGFb") +
theme_minimal()
+ theme(
plot.title = element_text(size = 16, face = "bold", hjust = 0.5, vjust = 0.5),  # Center the title
axis.text.y = element_text(size = 12)  # Adjust axis text font size
)
ggplot(top_main_res_c5BP, aes(reorder(pathway, NES), NES)) +
geom_col(fill='dodgerblue') +
coord_flip() +
labs(x="Pathway", y="Normalized Enrichment Score",
title="GSEA of Biological Process Ontology in Sensory Neurons exposed to TGFb") +
theme_minimal()
num_top_pathways <- 50 # Choose the number of top pathways to display
# Select the top pathways based on NES
top_main_res_c5BP <- main_res_c5BP %>%
top_n(num_top_pathways, wt = NES)
ggplot(top_main_res_c5BP, aes(reorder(pathway, NES), NES)) +
geom_col(fill='dodgerblue') +
coord_flip() +
labs(x="Pathway", y="Normalized Enrichment Score",
title="GSEA of Biological Process Ontology in Sensory Neurons exposed to TGFb") +
theme_minimal()
num_top_pathways <- 25 # Choose the number of top pathways to display
num_top_pathways <- 25 # Choose the number of top pathways to display
# Separate the top upregulated and downregulated pathways
top_upregulated <- main_res_c5BP %>%
arrange(-NES) %>%
head(num_top_pathways)
top_downregulated <- main_res_c5BP %>%
arrange(NES) %>%
head(num_top_pathways)
# Combine the top upregulated and downregulated pathways
top_main_res_c5BP <- bind_rows(top_upregulated, top_downregulated)
# Plot
# Plot
ggplot(top_main_res_c5BP, aes(reorder(pathway, NES), NES)) +
coord_flip() +
x = "Pathway",
title = "GSEA of Biological Process Ontology in Sensory Neurons exposed to IL4/IL13"
theme_minimal() +
plot.title = element_text(size = 16, face = "bold", hjust = 0.5, vjust = 0.5),
# Plot
ggplot(top_main_res_c5BP, aes(reorder(pathway, NES), NES)) +
geom_col(fill = 'dodgerblue') +
coord_flip() +
labs(
x = "Pathway",
y = "Normalized Enrichment Score",
title = "GSEA of Biological Process Ontology in Sensory Neurons exposed to TGFb"
) +
theme_minimal() +
theme(
plot.title = element_text(size = 16, face = "bold", hjust = 0.5, vjust = 0.5),
axis.text.y = element_text(size = 12)
)
